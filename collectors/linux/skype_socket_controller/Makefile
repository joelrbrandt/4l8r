#############################################################################
# Makefile for building: testapp
# Generated by qmake (1.07a) (Qt 3.3.6) on: Sat Apr 28 23:38:10 2007
# Project:  testapp.pro
# Template: app
# Command: $(QMAKE) -o Makefile testapp.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -Wall -W -g -D_REENTRANT  -DQT_THREAD_SUPPORT -DQT_SHARED -DQT_TABLET_SUPPORT
CXXFLAGS = -pipe -Wall -W -g -D_REENTRANT  -DQT_THREAD_SUPPORT -DQT_SHARED -DQT_TABLET_SUPPORT
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I/usr/share/qt3/mkspecs/default -I. -I/usr/include/qt3 -I.ui/ -I. -I.moc/
LINK     = g++
LFLAGS   = 
LIBS     = $(SUBLIBS) -L/usr/share/qt3/lib -L/usr/X11R6/lib -lqt-mt -lXext -lX11 -lm -lpthread
AR       = ar cqs
RANLIB   = 
MOC      = /usr/share/qt3/bin/moc
UIC      = /usr/share/qt3/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY)
COPY_DIR = $(COPY) -r
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = .obj/

####### Files

HEADERS = apiapplication.h \
		skypeapidlg.h \
		xmessages.h
SOURCES = apiapplication.cpp \
		skypeapidlg.cpp \
		testmain.cpp \
		xmessages.cpp
OBJECTS = .obj/apiapplication.o \
		.obj/skypeapidlg.o \
		.obj/testmain.o \
		.obj/xmessages.o \
		.obj/testapp_ui.o
FORMS = testapp_ui.ui
UICDECLS = .ui/testapp_ui.h
UICIMPLS = .ui/testapp_ui.cpp
SRCMOC   = .moc/moc_skypeapidlg.cpp \
		.moc/moc_xmessages.cpp \
		.moc/moc_testapp_ui.cpp \
		.moc/skypeapidlg.moc
OBJMOC = .obj/moc_skypeapidlg.o \
		.obj/moc_xmessages.o \
		.obj/moc_testapp_ui.o
DIST	   = testapp.pro
QMAKE_TARGET = testapp
DESTDIR  = 
TARGET   = testapp

first: all
####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(OBJCOMP) $(LIBS)

mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

$(MOC): 
	( cd $(QTDIR)/src/moc && $(MAKE) )

Makefile: testapp.pro  /usr/share/qt3/mkspecs/default/qmake.conf /usr/share/qt3/lib/libqt-mt.prl
	$(QMAKE) -o Makefile testapp.pro
qmake: 
	@$(QMAKE) -o Makefile testapp.pro

dist: 
	@mkdir -p .obj/testapp && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .obj/testapp/ && ( cd `dirname .obj/testapp` && $(TAR) testapp.tar testapp && $(GZIP) testapp.tar ) && $(MOVE) `dirname .obj/testapp`/testapp.tar.gz . && $(DEL_FILE) -r .obj/testapp

mocclean:
	-$(DEL_FILE) $(OBJMOC)
	-$(DEL_FILE) $(SRCMOC)

uiclean:
	-$(DEL_FILE) $(UICIMPLS) $(UICDECLS)

yaccclean:
lexclean:
clean: mocclean uiclean
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) $(TARGET)


FORCE:

####### Compile

.obj/apiapplication.o: apiapplication.cpp apiapplication.h \
		xmessages.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/apiapplication.o apiapplication.cpp

.obj/skypeapidlg.o: skypeapidlg.cpp xmessages.h \
		skypeapidlg.h \
		.moc/skypeapidlg.moc \
		.ui/testapp_ui.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/skypeapidlg.o skypeapidlg.cpp

.obj/testmain.o: testmain.cpp apiapplication.h \
		skypeapidlg.h \
		.ui/testapp_ui.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/testmain.o testmain.cpp

.obj/xmessages.o: xmessages.cpp xmessages.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/xmessages.o xmessages.cpp

.ui/testapp_ui.h: testapp_ui.ui 
	$(UIC) testapp_ui.ui -o .ui/testapp_ui.h

.ui/testapp_ui.cpp: .ui/testapp_ui.h testapp_ui.ui 
	$(UIC) testapp_ui.ui -i testapp_ui.h -o .ui/testapp_ui.cpp

.obj/testapp_ui.o: .ui/testapp_ui.cpp .ui/testapp_ui.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/testapp_ui.o .ui/testapp_ui.cpp

.obj/moc_skypeapidlg.o: .moc/moc_skypeapidlg.cpp  skypeapidlg.h .ui/testapp_ui.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/moc_skypeapidlg.o .moc/moc_skypeapidlg.cpp

.obj/moc_xmessages.o: .moc/moc_xmessages.cpp  xmessages.h 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/moc_xmessages.o .moc/moc_xmessages.cpp

.obj/moc_testapp_ui.o: .moc/moc_testapp_ui.cpp  .ui/testapp_ui.h 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/moc_testapp_ui.o .moc/moc_testapp_ui.cpp

.moc/moc_skypeapidlg.cpp: $(MOC) skypeapidlg.h
	$(MOC) skypeapidlg.h -o .moc/moc_skypeapidlg.cpp

.moc/moc_xmessages.cpp: $(MOC) xmessages.h
	$(MOC) xmessages.h -o .moc/moc_xmessages.cpp

.moc/skypeapidlg.moc: $(MOC) skypeapidlg.cpp
	$(MOC) skypeapidlg.cpp -o .moc/skypeapidlg.moc

.moc/moc_testapp_ui.cpp: $(MOC) .ui/testapp_ui.h
	$(MOC) .ui/testapp_ui.h -o .moc/moc_testapp_ui.cpp

####### Install

install:  

uninstall:  

